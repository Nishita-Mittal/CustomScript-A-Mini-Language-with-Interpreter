Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> VAR ID EQUALS expression SEMICOLON
Rule 5     statement_assignment -> ID EQUALS expression
Rule 6     statement -> statement_assignment SEMICOLON
Rule 7     statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 8     statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 9     statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 10    statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 11    statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
Rule 12    for_init -> VAR ID EQUALS expression
Rule 13    for_init -> ID EQUALS expression
Rule 14    for_init -> empty
Rule 15    for_update -> ID EQUALS expression
Rule 16    for_update -> empty
Rule 17    empty -> <empty>
Rule 18    expression -> expression PLUS expression
Rule 19    expression -> expression MINUS expression
Rule 20    expression -> expression TIMES expression
Rule 21    expression -> expression DIVIDE expression
Rule 22    expression -> expression GT expression
Rule 23    expression -> expression LT expression
Rule 24    expression -> expression GE expression
Rule 25    expression -> expression LE expression
Rule 26    expression -> expression EQ expression
Rule 27    expression -> expression NE expression
Rule 28    expression -> NUMBER
Rule 29    expression -> ID
Rule 30    statement -> SEMICOLON

Terminals, with rules where they appear

DIVIDE               : 21
ELSE                 : 10
EQ                   : 26
EQUALS               : 4 5 12 13 15
FOR                  : 11
GE                   : 24
GT                   : 22
ID                   : 4 5 12 13 15 29
IF                   : 9 10
LBRACE               : 8 9 10 10 11
LE                   : 25
LPAREN               : 7 8 9 10 11
LT                   : 23
MINUS                : 19
NE                   : 27
NUMBER               : 28
PLUS                 : 18
PRINT                : 7
RBRACE               : 8 9 10 10 11
RPAREN               : 7 8 9 10 11
SEMICOLON            : 4 6 7 11 11 30
TIMES                : 20
VAR                  : 4 12
WHILE                : 8
error                : 

Nonterminals, with rules where they appear

empty                : 14 16
expression           : 4 5 7 8 9 10 11 12 13 15 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27
for_init             : 11
for_update           : 11
program              : 0
statement            : 2 3
statement_assignment : 6
statement_list       : 1 2 8 9 10 10 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    statement_assignment           shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    $end            reduce using rule 1 (program -> statement_list .)
    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement                      shift and go to state 12
    statement_assignment           shift and go to state 7

state 3

    (3) statement_list -> statement .

    VAR             reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    SEMICOLON       reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> VAR . ID EQUALS expression SEMICOLON

    ID              shift and go to state 13


state 5

    (5) statement_assignment -> ID . EQUALS expression

    EQUALS          shift and go to state 14


state 6

    (30) statement -> SEMICOLON .

    VAR             reduce using rule 30 (statement -> SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> SEMICOLON .)
    IF              reduce using rule 30 (statement -> SEMICOLON .)
    FOR             reduce using rule 30 (statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 30 (statement -> SEMICOLON .)
    ID              reduce using rule 30 (statement -> SEMICOLON .)
    $end            reduce using rule 30 (statement -> SEMICOLON .)
    RBRACE          reduce using rule 30 (statement -> SEMICOLON .)


state 7

    (6) statement -> statement_assignment . SEMICOLON

    SEMICOLON       shift and go to state 15


state 8

    (7) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 16


state 9

    (8) statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 17


state 10

    (9) statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    LPAREN          shift and go to state 18


state 11

    (11) statement -> FOR . LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 19


state 12

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 13

    (4) statement -> VAR ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 20


state 14

    (5) statement_assignment -> ID EQUALS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 22

state 15

    (6) statement -> statement_assignment SEMICOLON .

    VAR             reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    PRINT           reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    IF              reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    FOR             reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    SEMICOLON       reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    ID              reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    $end            reduce using rule 6 (statement -> statement_assignment SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> statement_assignment SEMICOLON .)


state 16

    (7) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 24

state 17

    (8) statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 25

state 18

    (9) statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 26

state 19

    (11) statement -> FOR LPAREN . for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (12) for_init -> . VAR ID EQUALS expression
    (13) for_init -> . ID EQUALS expression
    (14) for_init -> . empty
    (17) empty -> .

    VAR             shift and go to state 28
    ID              shift and go to state 29
    SEMICOLON       reduce using rule 17 (empty -> .)

    for_init                       shift and go to state 27
    empty                          shift and go to state 30

state 20

    (4) statement -> VAR ID EQUALS . expression SEMICOLON
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 31

state 21

    (29) expression -> ID .

    PLUS            reduce using rule 29 (expression -> ID .)
    MINUS           reduce using rule 29 (expression -> ID .)
    TIMES           reduce using rule 29 (expression -> ID .)
    DIVIDE          reduce using rule 29 (expression -> ID .)
    GT              reduce using rule 29 (expression -> ID .)
    LT              reduce using rule 29 (expression -> ID .)
    GE              reduce using rule 29 (expression -> ID .)
    LE              reduce using rule 29 (expression -> ID .)
    EQ              reduce using rule 29 (expression -> ID .)
    NE              reduce using rule 29 (expression -> ID .)
    SEMICOLON       reduce using rule 29 (expression -> ID .)
    RPAREN          reduce using rule 29 (expression -> ID .)


state 22

    (5) statement_assignment -> ID EQUALS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    SEMICOLON       reduce using rule 5 (statement_assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 23

    (28) expression -> NUMBER .

    PLUS            reduce using rule 28 (expression -> NUMBER .)
    MINUS           reduce using rule 28 (expression -> NUMBER .)
    TIMES           reduce using rule 28 (expression -> NUMBER .)
    DIVIDE          reduce using rule 28 (expression -> NUMBER .)
    GT              reduce using rule 28 (expression -> NUMBER .)
    LT              reduce using rule 28 (expression -> NUMBER .)
    GE              reduce using rule 28 (expression -> NUMBER .)
    LE              reduce using rule 28 (expression -> NUMBER .)
    EQ              reduce using rule 28 (expression -> NUMBER .)
    NE              reduce using rule 28 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 28 (expression -> NUMBER .)
    RPAREN          reduce using rule 28 (expression -> NUMBER .)


state 24

    (7) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 25

    (8) statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    RPAREN          shift and go to state 43
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 26

    (9) statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (10) statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    RPAREN          shift and go to state 44
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 27

    (11) statement -> FOR LPAREN for_init . SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE

    SEMICOLON       shift and go to state 45


state 28

    (12) for_init -> VAR . ID EQUALS expression

    ID              shift and go to state 46


state 29

    (13) for_init -> ID . EQUALS expression

    EQUALS          shift and go to state 47


state 30

    (14) for_init -> empty .

    SEMICOLON       reduce using rule 14 (for_init -> empty .)


state 31

    (4) statement -> VAR ID EQUALS expression . SEMICOLON
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    SEMICOLON       shift and go to state 48
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 32

    (18) expression -> expression PLUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 49

state 33

    (19) expression -> expression MINUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 50

state 34

    (20) expression -> expression TIMES . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 51

state 35

    (21) expression -> expression DIVIDE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 52

state 36

    (22) expression -> expression GT . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 53

state 37

    (23) expression -> expression LT . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 54

state 38

    (24) expression -> expression GE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 55

state 39

    (25) expression -> expression LE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 56

state 40

    (26) expression -> expression EQ . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 57

state 41

    (27) expression -> expression NE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 58

state 42

    (7) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 59


state 43

    (8) statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 60


state 44

    (9) statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE
    (10) statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE

    LBRACE          shift and go to state 61


state 45

    (11) statement -> FOR LPAREN for_init SEMICOLON . expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 62

state 46

    (12) for_init -> VAR ID . EQUALS expression

    EQUALS          shift and go to state 63


state 47

    (13) for_init -> ID EQUALS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 64

state 48

    (4) statement -> VAR ID EQUALS expression SEMICOLON .

    VAR             reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    SEMICOLON       reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> VAR ID EQUALS expression SEMICOLON .)


state 49

    (18) expression -> expression PLUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression PLUS expression .) ]


state 50

    (19) expression -> expression MINUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 19 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression MINUS expression .) ]


state 51

    (20) expression -> expression TIMES expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 20 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 20 (expression -> expression TIMES expression .) ]


state 52

    (21) expression -> expression DIVIDE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 21 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]
  ! NE              [ reduce using rule 21 (expression -> expression DIVIDE expression .) ]


state 53

    (22) expression -> expression GT expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> expression GT expression .)
    RPAREN          reduce using rule 22 (expression -> expression GT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 22 (expression -> expression GT expression .) ]


state 54

    (23) expression -> expression LT expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 23 (expression -> expression LT expression .)
    RPAREN          reduce using rule 23 (expression -> expression LT expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 23 (expression -> expression LT expression .) ]


state 55

    (24) expression -> expression GE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 24 (expression -> expression GE expression .)
    RPAREN          reduce using rule 24 (expression -> expression GE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 24 (expression -> expression GE expression .) ]


state 56

    (25) expression -> expression LE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 25 (expression -> expression LE expression .)
    RPAREN          reduce using rule 25 (expression -> expression LE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 25 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 25 (expression -> expression LE expression .) ]


state 57

    (26) expression -> expression EQ expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 26 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 26 (expression -> expression EQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 26 (expression -> expression EQ expression .) ]


state 58

    (27) expression -> expression NE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression NE expression .)
    RPAREN          reduce using rule 27 (expression -> expression NE expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! PLUS            [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression NE expression .) ]


state 59

    (7) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    VAR             reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 60

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement_list                 shift and go to state 65
    statement                      shift and go to state 3
    statement_assignment           shift and go to state 7

state 61

    (9) statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (10) statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement_list                 shift and go to state 66
    statement                      shift and go to state 3
    statement_assignment           shift and go to state 7

state 62

    (11) statement -> FOR LPAREN for_init SEMICOLON expression . SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    SEMICOLON       shift and go to state 67
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 63

    (12) for_init -> VAR ID EQUALS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 68

state 64

    (13) for_init -> ID EQUALS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    SEMICOLON       reduce using rule 13 (for_init -> ID EQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 65

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    RBRACE          shift and go to state 69
    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement                      shift and go to state 12
    statement_assignment           shift and go to state 7

state 66

    (9) statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    RBRACE          shift and go to state 70
    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement                      shift and go to state 12
    statement_assignment           shift and go to state 7

state 67

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON . for_update RPAREN LBRACE statement_list RBRACE
    (15) for_update -> . ID EQUALS expression
    (16) for_update -> . empty
    (17) empty -> .

    ID              shift and go to state 72
    RPAREN          reduce using rule 17 (empty -> .)

    for_update                     shift and go to state 71
    empty                          shift and go to state 73

state 68

    (12) for_init -> VAR ID EQUALS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    SEMICOLON       reduce using rule 12 (for_init -> VAR ID EQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 69

    (8) statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SEMICOLON       reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 8 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 70

    (9) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .
    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE

    VAR             reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SEMICOLON       reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 9 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 74


state 71

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 75


state 72

    (15) for_update -> ID . EQUALS expression

    EQUALS          shift and go to state 76


state 73

    (16) for_update -> empty .

    RPAREN          reduce using rule 16 (for_update -> empty .)


state 74

    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 77


state 75

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 78


state 76

    (15) for_update -> ID EQUALS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression MINUS expression
    (20) expression -> . expression TIMES expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LT expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression LE expression
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . NUMBER
    (29) expression -> . ID

    NUMBER          shift and go to state 23
    ID              shift and go to state 21

    expression                     shift and go to state 79

state 77

    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement_list                 shift and go to state 80
    statement                      shift and go to state 3
    statement_assignment           shift and go to state 7

state 78

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement_list                 shift and go to state 81
    statement                      shift and go to state 3
    statement_assignment           shift and go to state 7

state 79

    (15) for_update -> ID EQUALS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . MINUS expression
    (20) expression -> expression . TIMES expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LT expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . LE expression
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression

    RPAREN          reduce using rule 15 (for_update -> ID EQUALS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 80

    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    RBRACE          shift and go to state 82
    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement                      shift and go to state 12
    statement_assignment           shift and go to state 7

state 81

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . VAR ID EQUALS expression SEMICOLON
    (6) statement -> . statement_assignment SEMICOLON
    (7) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (8) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (9) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE
    (10) statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) statement -> . FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE
    (30) statement -> . SEMICOLON
    (5) statement_assignment -> . ID EQUALS expression

    RBRACE          shift and go to state 83
    VAR             shift and go to state 4
    PRINT           shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    FOR             shift and go to state 11
    SEMICOLON       shift and go to state 6
    ID              shift and go to state 5

    statement                      shift and go to state 12
    statement_assignment           shift and go to state 7

state 82

    (10) statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    VAR             reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    SEMICOLON       reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ID              reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 10 (statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 83

    (11) statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .

    VAR             reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    SEMICOLON       reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    ID              reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 11 (statement -> FOR LPAREN for_init SEMICOLON expression SEMICOLON for_update RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for GE in state 49 resolved as shift
WARNING: shift/reduce conflict for LE in state 49 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NE in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for GT in state 50 resolved as shift
WARNING: shift/reduce conflict for LT in state 50 resolved as shift
WARNING: shift/reduce conflict for GE in state 50 resolved as shift
WARNING: shift/reduce conflict for LE in state 50 resolved as shift
WARNING: shift/reduce conflict for EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NE in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 51 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 51 resolved as shift
WARNING: shift/reduce conflict for GT in state 51 resolved as shift
WARNING: shift/reduce conflict for LT in state 51 resolved as shift
WARNING: shift/reduce conflict for GE in state 51 resolved as shift
WARNING: shift/reduce conflict for LE in state 51 resolved as shift
WARNING: shift/reduce conflict for EQ in state 51 resolved as shift
WARNING: shift/reduce conflict for NE in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for GT in state 53 resolved as shift
WARNING: shift/reduce conflict for LT in state 53 resolved as shift
WARNING: shift/reduce conflict for GE in state 53 resolved as shift
WARNING: shift/reduce conflict for LE in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NE in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 54 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 54 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 54 resolved as shift
WARNING: shift/reduce conflict for GT in state 54 resolved as shift
WARNING: shift/reduce conflict for LT in state 54 resolved as shift
WARNING: shift/reduce conflict for GE in state 54 resolved as shift
WARNING: shift/reduce conflict for LE in state 54 resolved as shift
WARNING: shift/reduce conflict for EQ in state 54 resolved as shift
WARNING: shift/reduce conflict for NE in state 54 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 55 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for GE in state 55 resolved as shift
WARNING: shift/reduce conflict for LE in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NE in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NE in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NE in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for GE in state 58 resolved as shift
WARNING: shift/reduce conflict for LE in state 58 resolved as shift
WARNING: shift/reduce conflict for EQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NE in state 58 resolved as shift
